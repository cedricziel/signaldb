[package]
name = "signaldb"
version = "0.1.0"
edition = "2021"
license = "AGPL-3.0"

publish = false

[dependencies]
acceptor = { path = "src/acceptor" }
common = { path = "src/common" }
messaging = { path = "src/messaging" }
querier = { path = "src/querier" }
router = { path = "src/router" }
writer = { path = "src/writer" }
tempfile = "3.8.1"
hex = "0.4"
futures = "0.3.31"

anyhow.workspace = true
axum.workspace = true
arrow-flight.workspace = true

arrow-array.workspace = true
arrow.workspace = true
arrow-schema.workspace = true
datafusion.workspace = true
parquet.workspace = true

opentelemetry-proto.workspace = true
tonic.workspace = true

tokio.workspace = true

tracing.workspace = true
tracing-subscriber.workspace = true

log.workspace = true

serde_json.workspace = true
figment.workspace = true

object_store.workspace = true

[workspace]
resolver = "2"
members = [
    "src/messaging",
    "src/acceptor",
    "src/common",
    "src/querier",
    "src/router",
    "src/signal-producer",
    "src/tempo-api",
    "src/writer",
]

[workspace.package]
version = "0.1.0"
edition = "2021"
license = "AGPL-3.0"

[workspace.dependencies]
acceptor = { path = "src/acceptor" }
common = { path = "src/common" }
messaging = { path = "src/messaging" }
tempo-api = { path = "src/tempo-api" }
writer = { path = "src/writer" }

async-trait = "0.1.88"
async-stream = "0.3.0"
futures = "0.3.31"

# Use wildcards to let Cargo resolve versions based on datafusion's requirements
arrow = "*"
arrow-array = "*"
arrow-flight = "*"
arrow-ipc = "*"
arrow-schema = "*"
datafusion = "46.0.1"
parquet = { version = "*", features = ["arrow", "async"] }
object_store = { version = "*", features = ["aws", "azure", "gcp"] }

tonic = { version = "0.12.3", features = [
    "transport",
    "channel",
    "codegen",
    "prost",
] }
tonic-build = "0.12.3"
tonic-reflection = "0.12.3"

opentelemetry = "0.29.1"
opentelemetry_sdk = "0.29.0"
opentelemetry-stdout = { version = "0.29.0" }
opentelemetry-otlp = { version = "0.29.0" }
opentelemetry-proto = "0.29.0"
opentelemetry-semantic-conventions = "0.29.0"

tokio = { version = "1.44.2", features = ["full"] }
tokio-stream = { version = "0.1.17", features = ["sync", "net"] }
tokio-test = "0.4.2"

tracing = "0.1"
tracing-subscriber = "0.3"

log = "0.4"
anyhow = "1.0.98"

# Use the same axum version that tonic depends on
axum = "0.7.9"
tower-http = "0.6.2"

serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.140"

tower = "0.5.2"

prost = "0.13"
prost-types = "0.13"
prost-build = "0.13"

thiserror = "2.0.12"

figment = { version = "0.10.19", features = ["toml", "env"] }
once_cell = "1.21.1"

bytes = "1"

mockall = "0.13.1"

uuid = "1.4.1"

humantime-serde = "1.1.1"

hyper = { version = "1.0.1", features = ["server", "http1"] }

hex = "0.4"

async-nats = "0.38.0"

testcontainers-modules = { version = "0.11.5", features = [
    "nats",
    "postgres",
], git = "https://github.com/cedricziel/testcontainers-rs-modules-community.git", branch = "nats-jetstream" }
tempfile = "3.15.0"

ntest = "0.9.3"

chrono = { version = "0.4", features = ["serde"] }
sqlx = { version = "0.8", default-features = false, features = [
    "postgres",
    "macros",
    "runtime-tokio-rustls",
    "chrono",
    "uuid",
] }

[profile.dev]
split-debuginfo = "unpacked"
